name: Release

on:
  push:
    branches:
      - main
      - ci/*
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org/"

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Check if version already exists on npm
        id: check
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "PACKAGE_NAME=$PACKAGE_NAME"
          echo "PACKAGE_VERSION=$PACKAGE_VERSION"
          echo "version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT

          NPM_VERSIONS=$(npm view $PACKAGE_NAME versions --json)
          echo "Published versions: $NPM_VERSIONS"

          if echo "$NPM_VERSIONS" | grep -q "\"$PACKAGE_VERSION\""; then
            echo "Version already exists on npm: $PACKAGE_VERSION"
            echo "publish_needed=false" >> $GITHUB_OUTPUT
          else
            echo "Version is new: $PACKAGE_VERSION"
            echo "publish_needed=true" >> $GITHUB_OUTPUT
          fi

      - name: Publish to npm
        if: steps.check.outputs.publish_needed == 'true'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_ENV: "production"

      - name: Extract latest changelog entry
        if: steps.check.outputs.publish_needed == 'true'
        run: |
          awk '/^## /{if (p) exit; p=1} p' CHANGELOG.md > LATEST_CHANGELOG.md

      - name: Create GitHub Release
        if: steps.check.outputs.publish_needed == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ steps.check.outputs.version }}"
          name: "Release v${{ steps.check.outputs.version }}"
          body_path: LATEST_CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
